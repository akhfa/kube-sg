name: ArgoCD Apply Config
on:
  push:
    branches:
      - main
    paths:
      - "argocd/bootstrap/**"
  pull_request:
    paths:
      - "argocd/bootstrap/**"
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Run in dry-run mode only (show changes without applying)"
        required: false
        default: false
        type: boolean
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.34.1"
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
        env:
          KUBECONFIG: kubeconfig.yaml
      - name: Show planned changes
        id: diff
        run: |
          echo "=== Showing planned changes ==="
          DIFF_OUTPUT=$(kubectl diff -k argocd/bootstrap/ 2>&1 || true)
          echo "$DIFF_OUTPUT"

          # Save diff output to file for PR comment
          echo "$DIFF_OUTPUT" > diff_output.txt

          if [[ "${{ inputs.dryrun }}" == "true" ]]; then
            echo "=== DRY RUN MODE: No changes will be applied ==="
          fi
        env:
          KUBECONFIG: kubeconfig.yaml
      - name: Delete all previous bot comments
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComments = comments.data.filter(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ArgoCD Planned Changes')
            );

            for (const comment of botComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
              });
            }
      - name: Post diff as PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const diffOutput = fs.readFileSync('diff_output.txt', 'utf8');

            let commentBody = '## ArgoCD Planned Changes\n\n';

            if (diffOutput.trim() === '' || diffOutput.includes('no changes')) {
              commentBody += '**No changes detected** - All ArgoCD configurations are up to date.\n';
            } else {
              commentBody += '```diff\n' + diffOutput + '\n```\n';
            }

            commentBody += '\n---\n*Automated comment by ArgoCD Deploy workflow*';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
      - name: Replace secrets in argocd-secret.yaml
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !inputs.dryrun }}
        run: |
          sed -i "s|DEX_AUTHENTIK_CLIENTSECRET|${{ secrets.DEX_AUTHENTIK_CLIENTSECRET }}|g" argocd/bootstrap/argocd-secret.yaml
          sed -i "s|DEX_GITHUB_CLIENTSECRET|${{ secrets.DEX_GITHUB_CLIENTSECRET }}|g" argocd/bootstrap/argocd-secret.yaml
      - name: Deploy ArgoCD configurations
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !inputs.dryrun }}
        run: |
          kubectl apply -k argocd/bootstrap/
        env:
          KUBECONFIG: kubeconfig.yaml
